{"ast":null,"code":"import _asyncToGenerator from \"/Users/kobrarahimi/Documents/Projects/RockPaperScissorsGame-main/UI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Symbols } from '../symbols';\nimport { Winner } from '../Winner';\nlet GameComponent = class GameComponent {\n  constructor(service) {\n    this.service = service;\n    this.winnerName = '';\n    this.botChoice = Object.keys(Symbols);\n    this.title = 'anularscissorsproject';\n    this.computer = false;\n    this.person = false;\n    this.message = \"\";\n  }\n\n  ngOnInit() {\n    this.winner = new Winner(\"\", \"\", 0, 0);\n    this.humanChoice = \"\";\n  }\n  /**\n   *\n   * @param id called when player choose his weapon and the id of the selected weapon sent to the\n   * backend.\n   */\n\n\n  playNow(choiceName) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.computer = true;\n      _this.person = true;\n\n      _this.getHumanChoice(choiceName);\n\n      let resp = _this.service.doPlay(choiceName); //passed to restAPI\n\n\n      resp.subscribe(data => _this.winner = data);\n      console.log(\"botchoise is \" + _this.winner.botChoice);\n    })();\n  }\n\n  getHumanChoice(choiceName) {\n    // if (id == 2) {\n    //   this.humanChoice = \"scissors\";\n    // } else if (id == 1) {\n    //   this.humanChoice = \"paper\";\n    // } else {\n    //   this.humanChoice = \"rock\";\n    // }\n    this.humanChoice = choiceName;\n  }\n\n  reset() {\n    console.log(\"reset\");\n    this.winner.humanWins = 0;\n    this.winner.botWins = 0;\n  }\n\n};\nGameComponent = __decorate([Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})], GameComponent);\nexport { GameComponent };","map":{"version":3,"sources":["/Users/kobrarahimi/Documents/Projects/RockPaperScissorsGame-main/UI/src/app/game/game.component.ts"],"names":["__decorate","Component","Symbols","Winner","GameComponent","constructor","service","winnerName","botChoice","Object","keys","title","computer","person","message","ngOnInit","winner","humanChoice","playNow","choiceName","getHumanChoice","resp","doPlay","subscribe","data","console","log","reset","humanWins","botWins","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,IAAIC,aAAa,GAAG,MAAMA,aAAN,CAAoB;AACpCC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,SAAL,GAAiBC,MAAM,CAACC,IAAP,CAAYR,OAAZ,CAAjB;AACA,SAAKS,KAAL,GAAa,uBAAb;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,MAAL,GAAc,KAAd;AACA,SAAKC,OAAL,GAAe,EAAf;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,SAAKC,MAAL,GAAc,IAAIb,MAAJ,CAAW,EAAX,EAAe,EAAf,EAAmB,CAAnB,EAAsB,CAAtB,CAAd;AACA,SAAKc,WAAL,GAAmB,EAAnB;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACUC,EAAAA,OAAO,CAACC,UAAD,EAAa;AAAA;;AAAA;AACtB,MAAA,KAAI,CAACP,QAAL,GAAgB,IAAhB;AACA,MAAA,KAAI,CAACC,MAAL,GAAc,IAAd;;AACA,MAAA,KAAI,CAACO,cAAL,CAAoBD,UAApB;;AACA,UAAIE,IAAI,GAAG,KAAI,CAACf,OAAL,CAAagB,MAAb,CAAoBH,UAApB,CAAX,CAJsB,CAIsB;;;AAC5CE,MAAAA,IAAI,CAACE,SAAL,CAAgBC,IAAD,IAAW,KAAI,CAACR,MAAL,GAAcQ,IAAxC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkB,KAAI,CAACV,MAAL,CAAYR,SAA1C;AANsB;AAOzB;;AACDY,EAAAA,cAAc,CAACD,UAAD,EAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAKF,WAAL,GAAmBE,UAAnB;AACH;;AACDQ,EAAAA,KAAK,GAAG;AACJF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAAKV,MAAL,CAAYY,SAAZ,GAAwB,CAAxB;AACA,SAAKZ,MAAL,CAAYa,OAAZ,GAAsB,CAAtB;AACH;;AAzCmC,CAAxC;AA2CAzB,aAAa,GAAGJ,UAAU,CAAC,CACvBC,SAAS,CAAC;AACN6B,EAAAA,QAAQ,EAAE,UADJ;AAENC,EAAAA,WAAW,EAAE,uBAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,sBAAD;AAHL,CAAD,CADc,CAAD,EAMvB5B,aANuB,CAA1B;AAOA,SAASA,aAAT","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Symbols } from '../symbols';\nimport { Winner } from '../Winner';\nlet GameComponent = class GameComponent {\n    constructor(service) {\n        this.service = service;\n        this.winnerName = '';\n        this.botChoice = Object.keys(Symbols);\n        this.title = 'anularscissorsproject';\n        this.computer = false;\n        this.person = false;\n        this.message = \"\";\n    }\n    ngOnInit() {\n        this.winner = new Winner(\"\", \"\", 0, 0);\n        this.humanChoice = \"\";\n    }\n    /**\n     *\n     * @param id called when player choose his weapon and the id of the selected weapon sent to the\n     * backend.\n     */\n    async playNow(choiceName) {\n        this.computer = true;\n        this.person = true;\n        this.getHumanChoice(choiceName);\n        let resp = this.service.doPlay(choiceName); //passed to restAPI\n        resp.subscribe((data) => (this.winner = data));\n        console.log(\"botchoise is \" + this.winner.botChoice);\n    }\n    getHumanChoice(choiceName) {\n        // if (id == 2) {\n        //   this.humanChoice = \"scissors\";\n        // } else if (id == 1) {\n        //   this.humanChoice = \"paper\";\n        // } else {\n        //   this.humanChoice = \"rock\";\n        // }\n        this.humanChoice = choiceName;\n    }\n    reset() {\n        console.log(\"reset\");\n        this.winner.humanWins = 0;\n        this.winner.botWins = 0;\n    }\n};\nGameComponent = __decorate([\n    Component({\n        selector: 'app-game',\n        templateUrl: './game.component.html',\n        styleUrls: ['./game.component.css']\n    })\n], GameComponent);\nexport { GameComponent };\n"]},"metadata":{},"sourceType":"module"}